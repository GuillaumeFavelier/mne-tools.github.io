

.. _sphx_glr_auto_examples_time_frequency_plot_source_power_spectrum.py:


=========================================================
Compute power spectrum densities of the sources with dSPM
=========================================================

Returns an STC file containing the PSD (in dB) of each of the sources.



.. code-block:: python

    # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import matplotlib.pyplot as plt

    import mne
    from mne import io
    from mne.datasets import sample
    from mne.minimum_norm import read_inverse_operator, compute_source_psd

    print(__doc__)




.. rst-class:: sphx-glr-horizontal





Set parameters


.. code-block:: python

    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_raw.fif'
    fname_inv = data_path + '/MEG/sample/sample_audvis-meg-oct-6-meg-inv.fif'
    fname_label = data_path + '/MEG/sample/labels/Aud-lh.label'

    # Setup for reading the raw data
    raw = io.Raw(raw_fname, verbose=False)
    events = mne.find_events(raw, stim_channel='STI 014')
    inverse_operator = read_inverse_operator(fname_inv)
    raw.info['bads'] = ['MEG 2443', 'EEG 053']

    # picks MEG gradiometers
    picks = mne.pick_types(raw.info, meg=True, eeg=False, eog=True,
                           stim=False, exclude='bads')

    tmin, tmax = 0, 120  # use the first 120s of data
    fmin, fmax = 4, 100  # look at frequencies between 4 and 100Hz
    n_fft = 2048  # the FFT size (n_fft). Ideally a power of 2
    label = mne.read_label(fname_label)

    stc = compute_source_psd(raw, inverse_operator, lambda2=1. / 9., method="dSPM",
                             tmin=tmin, tmax=tmax, fmin=fmin, fmax=fmax,
                             pick_ori="normal", n_fft=n_fft, label=label)

    stc.save('psd_dSPM')




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Reading 0 ... 166799  =      0.000 ...   277.714 secs...
    [done]
    320 events found
    Events id: [ 1  2  3  4  5 32]
    Reading inverse operator decomposition from /home/jaakko/mne-testing-data/MNE-sample-data/MEG/sample/sample_audvis-meg-oct-6-meg-inv.fif...
        Reading inverse operator info...
        [done]
        Reading inverse operator decomposition...
        [done]
        305 x 305 full covariance (kind = 1) found.
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Noise covariance matrix read.
        22494 x 22494 diagonal covariance (kind = 2) found.
        Source covariance matrix read.
        22494 x 22494 diagonal covariance (kind = 6) found.
        Orientation priors read.
        22494 x 22494 diagonal covariance (kind = 5) found.
        Depth priors read.
        Did not find the desired covariance matrix (kind = 3)
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        2 source spaces read
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Source spaces transformed to the inverse solution coordinate frame
    Considering frequencies 4 ... 100 Hz
    Preparing the inverse operator for use...
        Scaled noise and source covariance from nave = 1 to nave = 1
        Created the regularized inverter
        Created an SSP operator (subspace dimension = 3)
        Created the whitener using a full noise covariance matrix (3 small eigenvalues omitted)
        Computing noise-normalization factors (dSPM)...
    [done]
    Picked 305 channels from the data
    Computing inverse...
    (eigenleads need to be weighted)...
    Reducing data rank to 33
    Reading 0 ... 2047  =      0.000 ...     3.408 secs...
    [done]
    Reading 1024 ... 3071  =      1.705 ...     5.113 secs...
    [done]
    Reading 2048 ... 4095  =      3.410 ...     6.818 secs...
    [done]
    Reading 3072 ... 5119  =      5.115 ...     8.523 secs...
    [done]
    Reading 4096 ... 6143  =      6.820 ...    10.228 secs...
    [done]
    Reading 5120 ... 7167  =      8.525 ...    11.933 secs...
    [done]
    Reading 6144 ... 8191  =     10.230 ...    13.638 secs...
    [done]
    Reading 7168 ... 9215  =     11.934 ...    15.343 secs...
    [done]
    Reading 8192 ... 10239  =     13.639 ...    17.048 secs...
    [done]
    Reading 9216 ... 11263  =     15.344 ...    18.752 secs...
    [done]
    Reading 10240 ... 12287  =     17.049 ...    20.457 secs...
    [done]
    Reading 11264 ... 13311  =     18.754 ...    22.162 secs...
    [done]
    Reading 12288 ... 14335  =     20.459 ...    23.867 secs...
    [done]
    Reading 13312 ... 15359  =     22.164 ...    25.572 secs...
    [done]
    Reading 14336 ... 16383  =     23.869 ...    27.277 secs...
    [done]
    Reading 15360 ... 17407  =     25.574 ...    28.982 secs...
    [done]
    Reading 16384 ... 18431  =     27.279 ...    30.687 secs...
    [done]
    Reading 17408 ... 19455  =     28.984 ...    32.392 secs...
    [done]
    Reading 18432 ... 20479  =     30.689 ...    34.097 secs...
    [done]
    Reading 19456 ... 21503  =     32.393 ...    35.802 secs...
    [done]
    Reading 20480 ... 22527  =     34.098 ...    37.507 secs...
    [done]
    Reading 21504 ... 23551  =     35.803 ...    39.211 secs...
    [done]
    Reading 22528 ... 24575  =     37.508 ...    40.916 secs...
    [done]
    Reading 23552 ... 25599  =     39.213 ...    42.621 secs...
    [done]
    Reading 24576 ... 26623  =     40.918 ...    44.326 secs...
    [done]
    Reading 25600 ... 27647  =     42.623 ...    46.031 secs...
    [done]
    Reading 26624 ... 28671  =     44.328 ...    47.736 secs...
    [done]
    Reading 27648 ... 29695  =     46.033 ...    49.441 secs...
    [done]
    Reading 28672 ... 30719  =     47.738 ...    51.146 secs...
    [done]
    Reading 29696 ... 31743  =     49.443 ...    52.851 secs...
    [done]
    Reading 30720 ... 32767  =     51.148 ...    54.556 secs...
    [done]
    Reading 31744 ... 33791  =     52.852 ...    56.261 secs...
    [done]
    Reading 32768 ... 34815  =     54.557 ...    57.966 secs...
    [done]
    Reading 33792 ... 35839  =     56.262 ...    59.671 secs...
    [done]
    Reading 34816 ... 36863  =     57.967 ...    61.375 secs...
    [done]
    Reading 35840 ... 37887  =     59.672 ...    63.080 secs...
    [done]
    Reading 36864 ... 38911  =     61.377 ...    64.785 secs...
    [done]
    Reading 37888 ... 39935  =     63.082 ...    66.490 secs...
    [done]
    Reading 38912 ... 40959  =     64.787 ...    68.195 secs...
    [done]
    Reading 39936 ... 41983  =     66.492 ...    69.900 secs...
    [done]
    Reading 40960 ... 43007  =     68.197 ...    71.605 secs...
    [done]
    Reading 41984 ... 44031  =     69.902 ...    73.310 secs...
    [done]
    Reading 43008 ... 45055  =     71.607 ...    75.015 secs...
    [done]
    Reading 44032 ... 46079  =     73.312 ...    76.720 secs...
    [done]
    Reading 45056 ... 47103  =     75.016 ...    78.425 secs...
    [done]
    Reading 46080 ... 48127  =     76.721 ...    80.130 secs...
    [done]
    Reading 47104 ... 49151  =     78.426 ...    81.834 secs...
    [done]
    Reading 48128 ... 50175  =     80.131 ...    83.539 secs...
    [done]
    Reading 49152 ... 51199  =     81.836 ...    85.244 secs...
    [done]
    Reading 50176 ... 52223  =     83.541 ...    86.949 secs...
    [done]
    Reading 51200 ... 53247  =     85.246 ...    88.654 secs...
    [done]
    Reading 52224 ... 54271  =     86.951 ...    90.359 secs...
    [done]
    Reading 53248 ... 55295  =     88.656 ...    92.064 secs...
    [done]
    Reading 54272 ... 56319  =     90.361 ...    93.769 secs...
    [done]
    Reading 55296 ... 57343  =     92.066 ...    95.474 secs...
    [done]
    Reading 56320 ... 58367  =     93.771 ...    97.179 secs...
    [done]
    Reading 57344 ... 59391  =     95.475 ...    98.884 secs...
    [done]
    Reading 58368 ... 60415  =     97.180 ...   100.589 secs...
    [done]
    Reading 59392 ... 61439  =     98.885 ...   102.293 secs...
    [done]
    Reading 60416 ... 62463  =    100.590 ...   103.998 secs...
    [done]
    Reading 61440 ... 63487  =    102.295 ...   105.703 secs...
    [done]
    Reading 62464 ... 64511  =    104.000 ...   107.408 secs...
    [done]
    Reading 63488 ... 65535  =    105.705 ...   109.113 secs...
    [done]
    Reading 64512 ... 66559  =    107.410 ...   110.818 secs...
    [done]
    Reading 65536 ... 67583  =    109.115 ...   112.523 secs...
    [done]
    Reading 66560 ... 68607  =    110.820 ...   114.228 secs...
    [done]
    Reading 67584 ... 69631  =    112.525 ...   115.933 secs...
    [done]
    Reading 68608 ... 70655  =    114.230 ...   117.638 secs...
    [done]
    Reading 69632 ... 71679  =    115.935 ...   119.343 secs...
    [done]
    Reading 70656 ... 72703  =    117.639 ...   121.048 secs...
    [done]
    Reading 71680 ... 73727  =    119.344 ...   122.753 secs...
    [done]
    Writing STC to disk...
    [done]


View PSD of sources in label


.. code-block:: python

    plt.plot(1e3 * stc.times, stc.data.T)
    plt.xlabel('Frequency (Hz)')
    plt.ylabel('PSD (dB)')
    plt.title('Source Power Spectrum (PSD)')
    plt.show()



.. image:: /auto_examples/time_frequency/images/sphx_glr_plot_source_power_spectrum_001.png
    :align: center




**Total running time of the script:**
(0 minutes 2.170 seconds)



**Download Python source code:** :download:`plot_source_power_spectrum.py <plot_source_power_spectrum.py>`
