

.. _example_stats_plot_cluster_stats_spatio_temporal_repeated_measures_anova.py:


======================================================================
Repeated measures ANOVA on source data with spatio-temporal clustering
======================================================================

This example illustrates how to make use of the clustering functions
for arbitrary, self-defined contrasts beyond standard t-tests. In this
case we will tests if the differences in evoked responses between
stimulation modality (visual VS auditory) depend on the stimulus
location (left vs right) for a group of subjects (simulated here
using one subject's data). For this purpose we will compute an
interaction effect using a repeated measures ANOVA. The multiple
comparisons problem is addressed with a cluster-level permutation test
across space and time.



.. rst-class:: horizontal


    *

      .. image:: images/plot_cluster_stats_spatio_temporal_repeated_measures_anova_001.png
            :scale: 47

    *

      .. image:: images/plot_cluster_stats_spatio_temporal_repeated_measures_anova_002.png
            :scale: 47


**Script output**::

  Simulating data for 7 subjects.
  Morphing data.
  Computing connectivity.
  Clustering.
  Visualizing clusters.



**Python source code:** :download:`plot_cluster_stats_spatio_temporal_repeated_measures_anova.py <plot_cluster_stats_spatio_temporal_repeated_measures_anova.py>`

.. literalinclude:: plot_cluster_stats_spatio_temporal_repeated_measures_anova.py
    :lines: 16-

**Total running time of the example:**   54 seconds

.. raw:: html

    <div class="social-button-container">
        <div class="social-button">
            <a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
        </div>
        <div class="social-button">
            <g:plusone annotation="inline" width="120" size="medium"></g:plusone>
        </div>
        <div class="social-button">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <div class="fb-like" data-send="false" data-width="450" data-show-faces="false"></div>
        </div>
    </div>
    