

.. _sphx_glr_auto_tutorials_plot_cluster_stats_spatio_temporal.py:


.. _tut_stats_cluster_source_1samp:

=================================================================
Permutation t-test on source data with spatio-temporal clustering
=================================================================

Tests if the evoked response is significantly different between
conditions across subjects (simulated here using one subject's data).
The multiple comparisons problem is addressed with a cluster-level
permutation test across space and time.



.. code-block:: python

    # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #          Eric Larson <larson.eric.d@gmail.com>
    # License: BSD (3-clause)


    import os.path as op
    import numpy as np
    from numpy.random import randn
    from scipy import stats as stats

    import mne
    from mne import (io, spatial_tris_connectivity, compute_morph_matrix,
                     grade_to_tris)
    from mne.epochs import equalize_epoch_counts
    from mne.stats import (spatio_temporal_cluster_1samp_test,
                           summarize_clusters_stc)
    from mne.minimum_norm import apply_inverse, read_inverse_operator
    from mne.datasets import sample

    print(__doc__)




.. rst-class:: sphx-glr-horizontal





Set parameters


.. code-block:: python

    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'
    event_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw-eve.fif'
    subjects_dir = data_path + '/subjects'

    tmin = -0.2
    tmax = 0.3  # Use a lower tmax to reduce multiple comparisons

    #   Setup for reading the raw data
    raw = io.Raw(raw_fname)
    events = mne.read_events(event_fname)




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Opening raw data file /home/jaakko/mne-testing-data/MNE-sample-data/MEG/sample/sample_audvis_filt-0-40_raw.fif...
        Read a total of 4 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
            Average EEG reference (1 x 60)  idle
    Current compensation grade : 0
        Range : 6450 ... 48149 =     42.956 ...   320.665 secs
    Ready.


Read epochs for all channels, removing a bad one


.. code-block:: python

    raw.info['bads'] += ['MEG 2443']
    picks = mne.pick_types(raw.info, meg=True, eog=True, exclude='bads')
    event_id = 1  # L auditory
    reject = dict(grad=1000e-13, mag=4000e-15, eog=150e-6)
    epochs1 = mne.Epochs(raw, events, event_id, tmin, tmax, picks=picks,
                         baseline=(None, 0), reject=reject, preload=True)

    event_id = 3  # L visual
    epochs2 = mne.Epochs(raw, events, event_id, tmin, tmax, picks=picks,
                         baseline=(None, 0), reject=reject, preload=True)

    #    Equalize trial counts to eliminate bias (which would otherwise be
    #    introduced by the abs() performed below)
    equalize_epoch_counts([epochs1, epochs2])




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    72 matching events found
    Created an SSP operator (subspace dimension = 3)
    4 projection items activated
    Reading 712 ... 787  =      4.742 ...     5.241 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1132 ... 1207  =      7.539 ...     8.038 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1545 ... 1620  =     10.289 ...    10.789 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1948 ... 2023  =     12.973 ...    13.473 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 2377 ... 2452  =     15.830 ...    16.330 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 2771 ... 2846  =     18.454 ...    18.954 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 3197 ... 3272  =     21.292 ...    21.791 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 3621 ... 3696  =     24.115 ...    24.615 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4051 ... 4126  =     26.979 ...    27.479 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4465 ... 4540  =     29.736 ...    30.236 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4891 ... 4966  =     32.573 ...    33.073 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 5293 ... 5368  =     35.251 ...    35.750 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 5700 ... 5775  =     37.961 ...    38.461 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 6087 ... 6162  =     40.538 ...    41.038 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 6490 ... 6565  =     43.222 ...    43.722 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 6893 ... 6968  =     45.906 ...    46.406 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 7295 ... 7370  =     48.584 ...    49.083 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 7699 ... 7774  =     51.274 ...    51.774 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8132 ... 8207  =     54.158 ...    54.657 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8552 ... 8627  =     56.955 ...    57.454 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8987 ... 9062  =     59.852 ...    60.351 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 9403 ... 9478  =     62.622 ...    63.122 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 9815 ... 9890  =     65.366 ...    65.866 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 10261 ... 10336  =     68.337 ...    68.836 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 10686 ... 10761  =     71.167 ...    71.667 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 11084 ... 11159  =     73.818 ...    74.317 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 11517 ... 11592  =     76.701 ...    77.201 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 11949 ... 12024  =     79.578 ...    80.078 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 12743 ... 12818  =     84.866 ...    85.366 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on MAG : [u'MEG 1711']
    Reading 13154 ... 13229  =     87.604 ...    88.103 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 13572 ... 13647  =     90.387 ...    90.887 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 13997 ... 14072  =     93.218 ...    93.717 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 14412 ... 14487  =     95.982 ...    96.481 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 14844 ... 14919  =     98.859 ...    99.358 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 15262 ... 15337  =    101.642 ...   102.142 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 15668 ... 15743  =    104.346 ...   104.846 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16124 ... 16199  =    107.383 ...   107.883 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16529 ... 16604  =    110.081 ...   110.580 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16937 ... 17012  =    112.798 ...   113.297 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 17378 ... 17453  =    115.735 ...   116.234 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 17828 ... 17903  =    118.732 ...   119.231 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 18245 ... 18320  =    121.509 ...   122.008 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 18675 ... 18750  =    124.373 ...   124.872 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 19092 ... 19167  =    127.150 ...   127.649 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 19528 ... 19603  =    130.053 ...   130.553 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 19960 ... 20035  =    132.930 ...   133.430 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 20358 ... 20433  =    135.581 ...   136.081 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 21163 ... 21238  =    140.942 ...   141.442 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 21593 ... 21668  =    143.806 ...   144.305 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22008 ... 22083  =    146.570 ...   147.069 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22424 ... 22499  =    149.340 ...   149.840 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22846 ... 22921  =    152.151 ...   152.650 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 23239 ... 23314  =    154.768 ...   155.268 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 23654 ... 23729  =    157.532 ...   158.031 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24074 ... 24149  =    160.329 ...   160.828 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24502 ... 24577  =    163.179 ...   163.679 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24947 ... 25022  =    166.143 ...   166.643 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 25352 ... 25427  =    168.840 ...   169.340 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 25751 ... 25826  =    171.498 ...   171.997 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 26143 ... 26218  =    174.108 ...   174.608 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 26540 ... 26615  =    176.752 ...   177.252 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 27403 ... 27478  =    182.500 ...   182.999 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 27803 ... 27878  =    185.164 ...   185.663 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 28229 ... 28304  =    188.001 ...   188.500 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 28673 ... 28748  =    190.958 ...   191.457 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 29537 ... 29612  =    196.712 ...   197.211 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 29936 ... 30011  =    199.369 ...   199.868 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 30384 ... 30459  =    202.353 ...   202.852 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 30810 ... 30885  =    205.190 ...   205.689 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 31238 ... 31313  =    208.040 ...   208.540 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 31626 ... 31701  =    210.624 ...   211.124 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 32040 ... 32115  =    213.381 ...   213.881 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    9 bad epochs dropped
    73 matching events found
    Created an SSP operator (subspace dimension = 3)
    4 projection items activated
    Reading 606 ... 681  =      4.036 ...     4.535 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1026 ... 1101  =      6.833 ...     7.332 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1436 ... 1511  =      9.564 ...    10.063 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 1851 ... 1926  =     12.327 ...    12.827 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 2259 ... 2334  =     15.045 ...    15.544 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 2664 ... 2739  =     17.742 ...    18.241 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 3101 ... 3176  =     20.652 ...    21.152 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 3501 ... 3576  =     23.316 ...    23.816 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 3931 ... 4006  =     26.180 ...    26.679 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4356 ... 4431  =     29.010 ...    29.510 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4798 ... 4873  =     31.954 ...    32.453 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 5191 ... 5266  =     34.571 ...    35.071 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 5591 ... 5666  =     37.235 ...    37.735 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 5994 ... 6069  =     39.919 ...    40.419 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 6799 ... 6874  =     45.280 ...    45.780 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 7194 ... 7269  =     47.911 ...    48.410 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 7587 ... 7662  =     50.528 ...    51.028 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8039 ... 8114  =     53.538 ...    54.038 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8454 ... 8529  =     56.302 ...    56.802 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 8884 ... 8959  =     59.166 ...    59.666 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 9287 ... 9362  =     61.850 ...    62.349 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 9712 ... 9787  =     64.680 ...    65.180 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 10154 ... 10229  =     67.624 ...    68.124 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 10569 ... 10644  =     70.388 ...    70.887 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 10984 ... 11059  =     73.152 ...    73.651 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 11422 ... 11497  =     76.069 ...    76.568 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 11834 ... 11909  =     78.813 ...    79.312 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 12249 ... 12324  =     81.576 ...    82.076 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 12639 ... 12714  =     84.174 ...    84.673 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 13052 ... 13127  =     86.924 ...    87.424 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 13474 ... 13549  =     89.735 ...    90.234 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 13880 ... 13955  =     92.439 ...    92.938 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 14307 ... 14382  =     95.282 ...    95.782 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 15150 ... 15225  =    100.897 ...   101.396 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 15557 ... 15632  =    103.607 ...   104.107 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16007 ... 16082  =    106.604 ...   107.104 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16420 ... 16495  =    109.355 ...   109.854 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16837 ... 16912  =    112.132 ...   112.631 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 17260 ... 17335  =    114.949 ...   115.448 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 17717 ... 17792  =    117.992 ...   118.492 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 18144 ... 18219  =    120.836 ...   121.336 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 18559 ... 18634  =    123.600 ...   124.099 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 18997 ... 19072  =    126.517 ...   127.016 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 19417 ... 19492  =    129.314 ...   129.814 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 19857 ... 19932  =    132.244 ...   132.744 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 20267 ... 20342  =    134.975 ...   135.474 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 20674 ... 20749  =    137.686 ...   138.185 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 21072 ... 21147  =    140.336 ...   140.836 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 21479 ... 21554  =    143.047 ...   143.546 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 21917 ... 21992  =    145.964 ...   146.463 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22310 ... 22385  =    148.581 ...   149.081 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22752 ... 22827  =    151.525 ...   152.024 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 23140 ... 23215  =    154.109 ...   154.608 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 23547 ... 23622  =    156.819 ...   157.319 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 23970 ... 24045  =    159.636 ...   160.136 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24382 ... 24457  =    162.380 ...   162.880 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24845 ... 24920  =    165.464 ...   165.963 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 25257 ... 25332  =    168.208 ...   168.707 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 25647 ... 25722  =    170.805 ...   171.304 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 26047 ... 26122  =    173.469 ...   173.968 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 26438 ... 26513  =    176.073 ...   176.572 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on GRAD : [u'MEG 1333', u'MEG 1342']
    Reading 26882 ... 26957  =    179.030 ...   179.529 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 27295 ... 27370  =    181.780 ...   182.280 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 27700 ... 27775  =    184.478 ...   184.977 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 28123 ... 28198  =    187.295 ...   187.794 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 28567 ... 28642  =    190.252 ...   190.751 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 29015 ... 29090  =    193.235 ...   193.735 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 29437 ... 29512  =    196.046 ...   196.545 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 29842 ... 29917  =    198.743 ...   199.242 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 30272 ... 30347  =    201.607 ...   202.106 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 30700 ... 30775  =    204.457 ...   204.957 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 31127 ... 31202  =    207.301 ...   207.800 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 31940 ... 32015  =    212.715 ...   213.215 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    6 bad epochs dropped
    Dropped 0 epochs
    Dropped 4 epochs


Transform to source space


.. code-block:: python


    fname_inv = data_path + '/MEG/sample/sample_audvis-meg-oct-6-meg-inv.fif'
    snr = 3.0
    lambda2 = 1.0 / snr ** 2
    method = "dSPM"  # use dSPM method (could also be MNE or sLORETA)
    inverse_operator = read_inverse_operator(fname_inv)
    sample_vertices = [s['vertno'] for s in inverse_operator['src']]

    #    Let's average and compute inverse, resampling to speed things up
    evoked1 = epochs1.average()
    evoked1.resample(50)
    condition1 = apply_inverse(evoked1, inverse_operator, lambda2, method)
    evoked2 = epochs2.average()
    evoked2.resample(50)
    condition2 = apply_inverse(evoked2, inverse_operator, lambda2, method)

    #    Let's only deal with t > 0, cropping to reduce multiple comparisons
    condition1.crop(0, None)
    condition2.crop(0, None)
    tmin = condition1.tmin
    tstep = condition1.tstep




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Reading inverse operator decomposition from /home/jaakko/mne-testing-data/MNE-sample-data/MEG/sample/sample_audvis-meg-oct-6-meg-inv.fif...
        Reading inverse operator info...
        [done]
        Reading inverse operator decomposition...
        [done]
        305 x 305 full covariance (kind = 1) found.
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Noise covariance matrix read.
        22494 x 22494 diagonal covariance (kind = 2) found.
        Source covariance matrix read.
        22494 x 22494 diagonal covariance (kind = 6) found.
        Orientation priors read.
        22494 x 22494 diagonal covariance (kind = 5) found.
        Depth priors read.
        Did not find the desired covariance matrix (kind = 3)
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        2 source spaces read
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 60) active
        Source spaces transformed to the inverse solution coordinate frame
    Preparing the inverse operator for use...
        Scaled noise and source covariance from nave = 1 to nave = 63
        Created the regularized inverter
        Created an SSP operator (subspace dimension = 3)
        Created the whitener using a full noise covariance matrix (3 small eigenvalues omitted)
        Computing noise-normalization factors (dSPM)...
    [done]
    Picked 305 channels from the data
    Computing inverse...
    (eigenleads need to be weighted)...
    combining the current components...
    (dSPM)...
    [done]
    Preparing the inverse operator for use...
        Scaled noise and source covariance from nave = 1 to nave = 63
        Created the regularized inverter
        Created an SSP operator (subspace dimension = 3)
        Created the whitener using a full noise covariance matrix (3 small eigenvalues omitted)
        Computing noise-normalization factors (dSPM)...
    [done]
    Picked 305 channels from the data
    Computing inverse...
    (eigenleads need to be weighted)...
    combining the current components...
    (dSPM)...
    [done]


Transform to common cortical space


.. code-block:: python


    #    Normally you would read in estimates across several subjects and morph
    #    them to the same cortical space (e.g. fsaverage). For example purposes,
    #    we will simulate this by just having each "subject" have the same
    #    response (just noisy in source space) here. Note that for 7 subjects
    #    with a two-sided statistical test, the minimum significance under a
    #    permutation test is only p = 1/(2 ** 6) = 0.015, which is large.
    n_vertices_sample, n_times = condition1.data.shape
    n_subjects = 7
    print('Simulating data for %d subjects.' % n_subjects)

    #    Let's make sure our results replicate, so set the seed.
    np.random.seed(0)
    X = randn(n_vertices_sample, n_times, n_subjects, 2) * 10
    X[:, :, :, 0] += condition1.data[:, :, np.newaxis]
    X[:, :, :, 1] += condition2.data[:, :, np.newaxis]

    #    It's a good idea to spatially smooth the data, and for visualization
    #    purposes, let's morph these to fsaverage, which is a grade 5 source space
    #    with vertices 0:10242 for each hemisphere. Usually you'd have to morph
    #    each subject's data separately (and you might want to use morph_data
    #    instead), but here since all estimates are on 'sample' we can use one
    #    morph matrix for all the heavy lifting.
    fsave_vertices = [np.arange(10242), np.arange(10242)]
    morph_mat = compute_morph_matrix('sample', 'fsaverage', sample_vertices,
                                     fsave_vertices, 20, subjects_dir)
    n_vertices_fsave = morph_mat.shape[0]

    #    We have to change the shape for the dot() to work properly
    X = X.reshape(n_vertices_sample, n_times * n_subjects * 2)
    print('Morphing data.')
    X = morph_mat.dot(X)  # morph_mat is a sparse matrix
    X = X.reshape(n_vertices_fsave, n_times, n_subjects, 2)

    #    Finally, we want to compare the overall activity levels in each condition,
    #    the diff is taken along the last axis (condition). The negative sign makes
    #    it so condition1 > condition2 shows up as "red blobs" (instead of blue).
    X = np.abs(X)  # only magnitude
    X = X[:, :, :, 0] - X[:, :, :, 1]  # make paired contrast





.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Simulating data for 7 subjects.
    Computing morph matrix...
    Triangle file: created by gramfort on Thu Sep 15 21:13:45 2011 nvert = 155407 ntri = 310810
    Triangle file: created by gramfort on Fri Sep 16 00:40:11 2011 nvert = 156866 ntri = 313728
        Left-hemisphere map read.
        Right-hemisphere map read.
        20 smooth iterations done.
        20 smooth iterations done.
    [done]
    Morphing data.


Compute statistic


.. code-block:: python


    #    To use an algorithm optimized for spatio-temporal clustering, we
    #    just pass the spatial connectivity matrix (instead of spatio-temporal)
    print('Computing connectivity.')
    connectivity = spatial_tris_connectivity(grade_to_tris(5))

    #    Note that X needs to be a multi-dimensional array of shape
    #    samples (subjects) x time x space, so we permute dimensions
    X = np.transpose(X, [2, 1, 0])

    #    Now let's actually do the clustering. This can take a long time...
    #    Here we set the threshold quite high to reduce computation.
    p_threshold = 0.001
    t_threshold = -stats.distributions.t.ppf(p_threshold / 2., n_subjects - 1)
    print('Clustering.')
    T_obs, clusters, cluster_p_values, H0 = clu = \
        spatio_temporal_cluster_1samp_test(X, connectivity=connectivity, n_jobs=2,
                                           threshold=t_threshold)
    #    Now select the clusters that are sig. at p < 0.05 (note that this value
    #    is multiple-comparisons corrected).
    good_cluster_inds = np.where(cluster_p_values < 0.05)[0]




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Computing connectivity.
    -- number of connected vertices : 20484
    Clustering.
    stat_fun(H1): min=-26.358160 max=30.655236
    Running intial clustering
    Found 416 clusters
    Permuting ...
    Computing cluster p-values
    Done.


Visualize the clusters


.. code-block:: python


    print('Visualizing clusters.')

    #    Now let's build a convenient representation of each cluster, where each
    #    cluster becomes a "time point" in the SourceEstimate
    stc_all_cluster_vis = summarize_clusters_stc(clu, tstep=tstep,
                                                 vertices=fsave_vertices,
                                                 subject='fsaverage')

    #    Let's actually plot the first "time point" in the SourceEstimate, which
    #    shows all the clusters, weighted by duration
    subjects_dir = op.join(data_path, 'subjects')
    # blue blobs are for condition A < condition B, red for A > B
    brain = stc_all_cluster_vis.plot(hemi='both', subjects_dir=subjects_dir,
                                     time_label='Duration significant (ms)')
    brain.set_data_time_index(0)
    brain.show_view('lateral')
    brain.save_image('clusters.png')



.. image:: /auto_tutorials/images/sphx_glr_plot_cluster_stats_spatio_temporal_000.png
    :align: center


**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Visualizing clusters.
    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=-4.00e+01 fmid=0.00e+00 fmax=4.00e+01 transparent=0
    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=-4.00e+01 fmid=0.00e+00 fmax=4.00e+01 transparent=0


**Total running time of the script:**
(0 minutes 18.401 seconds)



**Download Python source code:** :download:`plot_cluster_stats_spatio_temporal.py <plot_cluster_stats_spatio_temporal.py>`
