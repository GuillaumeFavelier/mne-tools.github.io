

.. _sphx_glr_auto_examples_inverse_plot_lcmv_beamformer.py:


======================================
Compute LCMV beamformer on evoked data
======================================

Compute LCMV beamformer solutions on evoked dataset for three different choices
of source orientation and stores the solutions in stc files for visualisation.



.. code-block:: python

    # Author: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import matplotlib.pyplot as plt
    import numpy as np

    import mne
    from mne.datasets import sample
    from mne.io import Raw
    from mne.beamformer import lcmv

    print(__doc__)

    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_raw.fif'
    event_fname = data_path + '/MEG/sample/sample_audvis_raw-eve.fif'
    fname_fwd = data_path + '/MEG/sample/sample_audvis-meg-eeg-oct-6-fwd.fif'
    fname_cov = data_path + '/MEG/sample/sample_audvis-shrunk-cov.fif'
    label_name = 'Aud-lh'
    fname_label = data_path + '/MEG/sample/labels/%s.label' % label_name







Get epochs


.. code-block:: python

    event_id, tmin, tmax = 1, -0.2, 0.5

    # Setup for reading the raw data
    raw = Raw(raw_fname)
    raw.info['bads'] = ['MEG 2443', 'EEG 053']  # 2 bads channels
    events = mne.read_events(event_fname)

    # Set up pick list: EEG + MEG - bad channels (modify to your needs)
    left_temporal_channels = mne.read_selection('Left-temporal')
    picks = mne.pick_types(raw.info, meg=True, eeg=False, stim=True, eog=True,
                           exclude='bads', selection=left_temporal_channels)

    # Read epochs
    epochs = mne.Epochs(raw, events, event_id, tmin, tmax, proj=True,
                        picks=picks, baseline=(None, 0), preload=True,
                        reject=dict(grad=4000e-13, mag=4e-12, eog=150e-6))
    evoked = epochs.average()

    forward = mne.read_forward_solution(fname_fwd, surf_ori=True)

    # Read regularized noise covariance and compute regularized data covariance
    noise_cov = mne.read_cov(fname_cov)
    data_cov = mne.compute_covariance(epochs, tmin=0.04, tmax=0.15,
                                      method='shrunk')

    plt.close('all')

    pick_oris = [None, 'normal', 'max-power']
    names = ['free', 'normal', 'max-power']
    descriptions = ['Free orientation', 'Normal orientation', 'Max-power '
                    'orientation']
    colors = ['b', 'k', 'r']

    for pick_ori, name, desc, color in zip(pick_oris, names, descriptions, colors):
        stc = lcmv(evoked, forward, noise_cov, data_cov, reg=0.01,
                   pick_ori=pick_ori)

        # View activation time-series
        label = mne.read_label(fname_label)
        stc_label = stc.in_label(label)
        plt.plot(1e3 * stc_label.times, np.mean(stc_label.data, axis=0), color,
                 hold=True, label=desc)

    plt.xlabel('Time (ms)')
    plt.ylabel('LCMV value')
    plt.ylim(-0.8, 2.2)
    plt.title('LCMV in %s' % label_name)
    plt.legend()
    plt.show()



.. image:: /auto_examples/inverse/images/sphx_glr_plot_lcmv_beamformer_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

      Opening raw data file /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw.fif...
        Read a total of 3 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
    Current compensation grade : 0
        Range : 25800 ... 192599 =     42.956 ...   320.670 secs
    Ready.
    Adding average EEG reference projection.
    1 projection items deactivated
    72 matching events found
    Applying baseline correction (mode: mean)
    Created an SSP operator (subspace dimension = 3)
    4 projection items activated
    Loading data for 72 events and 421 original time points ...
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
        Rejecting  epoch based on EOG : [u'EOG 061']
    16 bad epochs dropped
    Reading forward solution from /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis-meg-eeg-oct-6-fwd.fif...
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        Reading a source space...
        Computing patch statistics...
        Patch information added...
        Distance information added...
        [done]
        2 source spaces read
        Desired named matrix (kind = 3523) not available
        Read MEG forward solution (7498 sources, 306 channels, free orientations)
        Desired named matrix (kind = 3523) not available
        Read EEG forward solution (7498 sources, 60 channels, free orientations)
        MEG and EEG forward solutions combined
        Source spaces transformed to the forward solution coordinate frame
        Converting to surface-based source orientations...
        Average patch normals will be employed in the rotation to the local surface coordinates....
    [done]
        365 x 365 full covariance (kind = 1) found.
        Read a total of 4 projection items:
            PCA-v1 (1 x 102) active
            PCA-v2 (1 x 102) active
            PCA-v3 (1 x 102) active
            Average EEG reference (1 x 59) active
    Estimating covariance using SHRUNK
    Done.
    Using cross-validation to select the best estimator.
    Number of samples used : 3752
    [done]
    log-likelihood on unseen data (descending order):
       shrunk: -201.698
    selecting best estimator: shrunk
    info["bads"] and noise_cov["bads"] do not match, excluding bad channels from both
        39 out of 366 channels remain after picking
        Created an SSP operator (subspace dimension = 3)
    estimated rank (mag + grad): 36
    Setting small MEG eigenvalues to zero.
    Not doing PCA for MEG.
    combining the current components...
    info["bads"] and noise_cov["bads"] do not match, excluding bad channels from both
        39 out of 366 channels remain after picking
        Created an SSP operator (subspace dimension = 3)
    estimated rank (mag + grad): 36
    Setting small MEG eigenvalues to zero.
    Not doing PCA for MEG.
    info["bads"] and noise_cov["bads"] do not match, excluding bad channels from both
        39 out of 366 channels remain after picking
        Created an SSP operator (subspace dimension = 3)
    estimated rank (mag + grad): 36
    Setting small MEG eigenvalues to zero.
    Not doing PCA for MEG.


**Total running time of the script:**
(0 minutes 8.056 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_lcmv_beamformer.py <plot_lcmv_beamformer.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_lcmv_beamformer.ipynb <plot_lcmv_beamformer.ipynb>`
