

.. _sphx_glr_auto_examples_preprocessing_plot_estimate_covariance_matrix_raw.py:


==============================================
Estimate covariance matrix from a raw FIF file
==============================================



.. code-block:: python

    # Author: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import mne
    from mne import io
    from mne.datasets import sample

    print(__doc__)

    data_path = sample.data_path()
    fname = data_path + '/MEG/sample/sample_audvis_raw.fif'

    raw = io.Raw(fname)

    include = []  # or stim channels ['STI 014']
    raw.info['bads'] += ['EEG 053']  # bads + 1 more

    # pick EEG channels
    picks = mne.pick_types(raw.info, meg=True, eeg=True, stim=False, eog=True,
                           include=include, exclude='bads')
    # setup rejection
    reject = dict(eeg=80e-6, eog=150e-6)

    # Compute the covariance from the raw data
    cov = mne.compute_raw_covariance(raw, picks=picks, reject=reject)
    print(cov)





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /home/ubuntu/mne_data/MNE-sample-data/MEG/sample/sample_audvis_raw.fif...
        Read a total of 3 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
    Current compensation grade : 0
        Range : 25800 ... 192599 =     42.956 ...   320.670 secs
    Ready.
    Adding average EEG reference projection.
    1 projection items deactivated
    Using up to 1388 segments
    Estimating covariance using EMPIRICAL
    Done.
    Using cross-validation to select the best estimator.
    Number of samples used : 130200
    [done]
    log-likelihood on unseen data (descending order):
       empirical: -1889.703
    selecting best estimator: empirical
    <Covariance  |  size : 364 x 364, n_samples : 130200, data : [[  5.28954704e-23   1.68723133e-23  -5.20780921e-25 ...,   4.16531684e-17
        3.92004610e-17   4.13928559e-17]
     [  1.68723133e-23   3.58422665e-23  -8.76134041e-25 ...,   5.27920087e-17
        5.12915808e-17   4.62094567e-17]
     [ -5.20780921e-25  -8.76134041e-25   3.21814375e-25 ...,  -4.37346969e-18
       -4.52470480e-18  -3.44616490e-18]
     ..., 
     [  4.16531684e-17   5.27920087e-17  -4.37346969e-18 ...,   2.96800080e-10
        2.95259539e-10   2.46192001e-10]
     [  3.92004610e-17   5.12915808e-17  -4.52470480e-18 ...,   2.95259539e-10
        3.13748362e-10   2.51518186e-10]
     [  4.13928559e-17   4.62094567e-17  -3.44616490e-18 ...,   2.46192001e-10
        2.51518186e-10   2.39222910e-10]]>


Show covariance


.. code-block:: python

    fig_cov, fig_svd = mne.viz.plot_cov(cov, raw.info, colorbar=True, proj=True)
    # try setting proj to False to see the effect



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_estimate_covariance_matrix_raw_001.png
            :scale: 47

    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_estimate_covariance_matrix_raw_002.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Created an SSP operator (subspace dimension = 4)


**Total running time of the script:**
(0 minutes 31.490 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_estimate_covariance_matrix_raw.py <plot_estimate_covariance_matrix_raw.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_estimate_covariance_matrix_raw.ipynb <plot_estimate_covariance_matrix_raw.ipynb>`
