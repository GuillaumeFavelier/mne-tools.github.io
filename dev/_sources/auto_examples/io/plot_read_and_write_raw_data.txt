

.. _sphx_glr_auto_examples_io_plot_read_and_write_raw_data.py:


=============================
Reading and writing raw files
=============================

In this example, we read a raw file. Plot a segment of MEG data
restricted to MEG channels. And save these data in a new
raw file.


.. code-block:: python

    # Author: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import mne
    from mne.datasets import sample

    print(__doc__)

    data_path = sample.data_path()

    fname = data_path + '/MEG/sample/sample_audvis_raw.fif'

    raw = mne.io.Raw(fname)

    # Set up pick list: MEG + STI 014 - bad channels
    want_meg = True
    want_eeg = False
    want_stim = False
    include = ['STI 014']
    raw.info['bads'] += ['MEG 2443', 'EEG 053']  # bad channels + 2 more

    picks = mne.pick_types(raw.info, meg=want_meg, eeg=want_eeg, stim=want_stim,
                           include=include, exclude='bads')

    some_picks = picks[:5]  # take 5 first
    start, stop = raw.time_as_index([0, 15])  # read the first 15s of data
    data, times = raw[some_picks, start:(stop + 1)]

    # save 150s of MEG data in FIF file
    raw.save('sample_audvis_meg_raw.fif', tmin=0, tmax=150, picks=picks,
             overwrite=True)




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Opening raw data file /home/jaakko/mne-testing-data/MNE-sample-data/MEG/sample/sample_audvis_raw.fif...
        Read a total of 3 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
    Current compensation grade : 0
        Range : 25800 ... 192599 =     42.956 ...   320.670 secs
    Ready.
    Adding average EEG reference projection.
    1 projection items deactivated
    Reading 0 ... 9009  =      0.000 ...    15.000 secs...
    [done]
    Reading 0 ... 0  =      0.000 ...     0.000 secs...
    [done]
    Overwriting existing file.
    Writing /home/jaakko/mne-python/examples/io/sample_audvis_meg_raw.fif
    Reading 0 ... 6006  =      0.000 ...    10.000 secs...
    [done]
    Writing ...
    Reading 6007 ... 12013  =     10.001 ...    20.001 secs...
    [done]
    Writing ...
    Reading 12014 ... 18020  =     20.003 ...    30.003 secs...
    [done]
    Writing ...
    Reading 18021 ... 24027  =     30.004 ...    40.004 secs...
    [done]
    Writing ...
    Reading 24028 ... 30034  =     40.006 ...    50.005 secs...
    [done]
    Writing ...
    Reading 30035 ... 36041  =     50.007 ...    60.007 secs...
    [done]
    Writing ...
    Reading 36042 ... 42048  =     60.008 ...    70.008 secs...
    [done]
    Writing ...
    Reading 42049 ... 48055  =     70.010 ...    80.010 secs...
    [done]
    Writing ...
    Reading 48056 ... 54062  =     80.011 ...    90.011 secs...
    [done]
    Writing ...
    Reading 54063 ... 60069  =     90.013 ...   100.012 secs...
    [done]
    Writing ...
    Reading 60070 ... 66076  =    100.014 ...   110.014 secs...
    [done]
    Writing ...
    Reading 66077 ... 72083  =    110.016 ...   120.015 secs...
    [done]
    Writing ...
    Reading 72084 ... 78090  =    120.017 ...   130.017 secs...
    [done]
    Writing ...
    Reading 78091 ... 84097  =    130.018 ...   140.018 secs...
    [done]
    Writing ...
    Reading 84098 ... 90092  =    140.020 ...   150.000 secs...
    [done]
    Writing ...
    Closing /home/jaakko/mne-python/examples/io/sample_audvis_meg_raw.fif [done]


Show MEG data


.. code-block:: python

    raw.plot()



.. image:: /auto_examples/io/images/sphx_glr_plot_read_and_write_raw_data_001.png
    :align: center


**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Reading 0 ... 6005  =      0.000 ...     9.998 secs...
    [done]


**Total running time of the script:**
(0 minutes 3.009 seconds)



**Download Python source code:** :download:`plot_read_and_write_raw_data.py <plot_read_and_write_raw_data.py>`
