.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_visualization_plot_xhemi.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_visualization_plot_xhemi.py:


===========================
Cross-hemisphere comparison
===========================

This example illustrates how to visualize the difference between activity in
the left and the right hemisphere. The data from the right hemisphere is
mapped to the left hemisphere, and then the difference is plotted. For more
information see :func:`mne.compute_source_morph`.



.. image:: /auto_examples/visualization/images/sphx_glr_plot_xhemi_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    surface source space inferred...
    Computing morph matrix...
        Left-hemisphere map read.
        Right-hemisphere map read.
        5 smooth iterations done.
        5 smooth iterations done.
    [done]
    [done]
    surface source space inferred...
    Computing morph matrix...
        Left-hemisphere map read.
        Right-hemisphere map read.
        2 smooth iterations done.
        2 smooth iterations done.
    [done]
    [done]
    Using control points [ 3.70314414  4.48867668 13.29875989]
    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap divergent: center=0.00e+00, [3.70e+00, 4.49e+00, 1.33e+01] (transparent)




|


.. code-block:: python

    # Author: Christian Brodbeck <christianbrodbeck@nyu.edu>
    #
    # License: BSD (3-clause)

    import mne

    data_dir = mne.datasets.sample.data_path()
    subjects_dir = data_dir + '/subjects'
    stc_path = data_dir + '/MEG/sample/sample_audvis-meg-eeg'

    stc = mne.read_source_estimate(stc_path, 'sample')

    # First, morph the data to fsaverage_sym, for which we have left_right
    # registrations:
    stc = mne.compute_source_morph(stc, 'sample', 'fsaverage_sym', smooth=5,
                                   warn=False,
                                   subjects_dir=subjects_dir).apply(stc)

    # Compute a morph-matrix mapping the right to the left hemisphere,
    # and vice-versa.
    morph = mne.compute_source_morph(stc, 'fsaverage_sym', 'fsaverage_sym',
                                     spacing=stc.vertices, warn=False,
                                     subjects_dir=subjects_dir, xhemi=True)
    stc_xhemi = morph.apply(stc)

    # Now we can subtract them and plot the result:
    diff = stc - stc_xhemi

    diff.plot(hemi='lh', subjects_dir=subjects_dir, initial_time=0.07,
              size=(800, 600))

**Total running time of the script:** ( 0 minutes  9.968 seconds)


.. _sphx_glr_download_auto_examples_visualization_plot_xhemi.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xhemi.py <plot_xhemi.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xhemi.ipynb <plot_xhemi.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
