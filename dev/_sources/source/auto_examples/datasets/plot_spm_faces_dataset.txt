

.. _example_datasets_plot_spm_faces_dataset.py:


==========================================
From raw data to dSPM on SPM Faces dataset
==========================================

Runs a full pipeline using MNE-Python:
- artifact removal
- averaging Epochs
- forward model computation
- source reconstruction using dSPM on the contrast : "faces - scrambled"




.. rst-class:: horizontal


    *

      .. image:: images/plot_spm_faces_dataset_1.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_2.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_3.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_4.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_5.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_6.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_7.png
            :scale: 47

    *

      .. image:: images/plot_spm_faces_dataset_8.png
            :scale: 47


**Script output**::

  The add_dist parameter to mne.setup_source_space currently defaults to False, but the default will change to True in release 0.9. Specify the parameter explicitly to avoid this warning.
  Updating smoothing matrix, be patient..
  Smoothing matrix creation, step 1
  Smoothing matrix creation, step 2
  Smoothing matrix creation, step 3
  Smoothing matrix creation, step 4
  Smoothing matrix creation, step 5
  Smoothing matrix creation, step 6
  Smoothing matrix creation, step 7
  Smoothing matrix creation, step 8
  Smoothing matrix creation, step 9
  Smoothing matrix creation, step 10
  colormap: fmin=5.00e+00 fmid=1.00e+01 fmax=1.50e+01 transparent=1
  Updating smoothing matrix, be patient..
  Smoothing matrix creation, step 1
  Smoothing matrix creation, step 2
  Smoothing matrix creation, step 3
  Smoothing matrix creation, step 4
  Smoothing matrix creation, step 5
  Smoothing matrix creation, step 6
  ...



**Python source code:** :download:`plot_spm_faces_dataset.py <plot_spm_faces_dataset.py>`

.. literalinclude:: plot_spm_faces_dataset.py
    :lines: 13-

**Total running time of the example:**  121 seconds

.. raw:: html

    <div class="social-button-container">
        <div class="social-button">
            <a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
        </div>
        <div class="social-button">
            <g:plusone annotation="inline" width="120" size="medium"></g:plusone>
        </div>
        <div class="social-button">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <div class="fb-like" data-send="false" data-width="450" data-show-faces="false"></div>
        </div>
    </div>
    