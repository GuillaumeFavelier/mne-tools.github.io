

.. _sphx_glr_auto_tutorials_plot_cluster_1samp_test_time_frequency.py:


.. _tut_stats_cluster_sensor_1samp_tfr:

===============================================================
Non-parametric 1 sample cluster statistic on single trial power
===============================================================

This script shows how to estimate significant clusters
in time-frequency power estimates. It uses a non-parametric
statistical procedure based on permutations and cluster
level statistics.

The procedure consists in:

  - extracting epochs
  - compute single trial power estimates
  - baseline line correct the power estimates (power ratios)
  - compute stats to see if ratio deviates from 1.



.. code-block:: python

    # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)

    import numpy as np
    import matplotlib.pyplot as plt

    import mne
    from mne import io
    from mne.time_frequency import single_trial_power
    from mne.stats import permutation_cluster_1samp_test
    from mne.datasets import sample

    print(__doc__)




.. rst-class:: sphx-glr-horizontal





Set parameters


.. code-block:: python

    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_raw.fif'
    event_id = 1
    tmin = -0.3
    tmax = 0.6

    # Setup for reading the raw data
    raw = io.Raw(raw_fname)
    events = mne.find_events(raw, stim_channel='STI 014')

    include = []
    raw.info['bads'] += ['MEG 2443', 'EEG 053']  # bads + 2 more

    # picks MEG gradiometers
    picks = mne.pick_types(raw.info, meg='grad', eeg=False, eog=True,
                           stim=False, include=include, exclude='bads')

    # Load condition 1
    event_id = 1
    epochs = mne.Epochs(raw, events, event_id, tmin, tmax, picks=picks,
                        baseline=(None, 0), reject=dict(grad=4000e-13, eog=150e-6))
    data = epochs.get_data()  # as 3D matrix
    data *= 1e13  # change unit to fT / cm
    # Time vector
    times = 1e3 * epochs.times  # change unit to ms

    # Take only one channel
    ch_name = raw.info['ch_names'][97]
    data = data[:, 97:98, :]

    evoked_data = np.mean(data, 0)

    # data -= evoked_data[None,:,:] # remove evoked component
    # evoked_data = np.mean(data, 0)

    # Factor to down-sample the temporal dimension of the PSD computed by
    # single_trial_power.  Decimation occurs after frequency decomposition and can
    # be used to reduce memory usage (and possibly computational time of downstream
    # operations such as nonparametric statistics) if you don't need high
    # spectrotemporal resolution.
    decim = 5
    frequencies = np.arange(8, 40, 2)  # define frequencies of interest
    sfreq = raw.info['sfreq']  # sampling in Hz
    epochs_power = single_trial_power(data, sfreq=sfreq, frequencies=frequencies,
                                      n_cycles=4, n_jobs=1,
                                      baseline=(-100, 0), times=times,
                                      baseline_mode='ratio', decim=decim)

    # Crop in time to keep only what is between 0 and 400 ms
    time_mask = (times > 0) & (times < 400)
    evoked_data = evoked_data[:, time_mask]
    times = times[time_mask]

    # The time vector reflects the original time points, not the decimated time
    # points returned by single trial power. Be sure to decimate the time mask
    # appropriately.
    epochs_power = epochs_power[..., time_mask[::decim]]

    epochs_power = epochs_power[:, 0, :, :]
    epochs_power = np.log10(epochs_power)  # take log of ratio
    # under the null hypothesis epochs_power should be now be 0




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Opening raw data file /home/jaakko/mne-testing-data/MNE-sample-data/MEG/sample/sample_audvis_raw.fif...
        Read a total of 3 projection items:
            PCA-v1 (1 x 102)  idle
            PCA-v2 (1 x 102)  idle
            PCA-v3 (1 x 102)  idle
    Current compensation grade : 0
        Range : 25800 ... 192599 =     42.956 ...   320.670 secs
    Ready.
    Adding average EEG reference projection.
    1 projection items deactivated
    Reading 0 ... 166799  =      0.000 ...   277.714 secs...
    [done]
    320 events found
    Events id: [ 1  2  3  4  5 32]
    72 matching events found
    4 projection items activated
    Reading 2791 ... 3331  =      4.647 ...     5.546 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 4470 ... 5010  =      7.442 ...     8.341 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 6121 ... 6661  =     10.191 ...    11.090 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 7732 ... 8272  =     12.873 ...    13.773 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 9448 ... 9988  =     15.731 ...    16.630 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 11027 ... 11567  =     18.360 ...    19.259 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 12731 ... 13271  =     21.197 ...    22.096 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 14425 ... 14965  =     24.017 ...    24.916 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 16146 ... 16686  =     26.882 ...    27.782 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 17801 ... 18341  =     29.638 ...    30.537 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 19506 ... 20046  =     32.477 ...    33.376 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 21115 ... 21655  =     35.156 ...    36.055 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 22742 ... 23282  =     37.865 ...    38.764 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 24289 ... 24829  =     40.440 ...    41.339 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 25901 ... 26441  =     43.124 ...    44.023 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 27514 ... 28054  =     45.810 ...    46.709 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 29120 ... 29660  =     48.484 ...    49.383 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 30737 ... 31277  =     51.176 ...    52.075 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 32468 ... 33008  =     54.058 ...    54.957 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 34149 ... 34689  =     56.857 ...    57.756 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 35888 ... 36428  =     59.752 ...    60.651 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 37552 ... 38092  =     62.523 ...    63.422 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 39201 ... 39741  =     65.268 ...    66.167 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 40984 ... 41524  =     68.237 ...    69.136 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 42686 ... 43226  =     71.070 ...    71.970 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 44279 ... 44819  =     73.723 ...    74.622 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 46011 ... 46551  =     76.606 ...    77.506 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 47738 ... 48278  =     79.482 ...    80.381 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 50914 ... 51454  =     84.770 ...    85.669 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 52559 ... 53099  =     87.509 ...    88.408 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 54229 ... 54769  =     90.289 ...    91.188 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 55931 ... 56471  =     93.123 ...    94.022 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 57588 ... 58128  =     95.882 ...    96.781 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 59319 ... 59859  =     98.764 ...    99.663 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 60991 ... 61531  =    101.548 ...   102.447 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 62613 ... 63153  =    104.248 ...   105.147 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 64439 ... 64979  =    107.288 ...   108.187 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 66058 ... 66598  =    109.984 ...   110.883 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 67689 ... 68229  =    112.699 ...   113.599 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 69455 ... 69995  =    115.640 ...   116.539 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 71254 ... 71794  =    118.635 ...   119.534 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 72923 ... 73463  =    121.414 ...   122.313 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 74640 ... 75180  =    124.273 ...   125.172 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 76308 ... 76848  =    127.050 ...   127.949 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 78053 ... 78593  =    129.955 ...   130.854 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 79780 ... 80320  =    132.831 ...   133.730 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 81375 ... 81915  =    135.486 ...   136.385 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 84594 ... 85134  =    140.846 ...   141.745 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 86312 ... 86852  =    143.706 ...   144.605 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 87972 ... 88512  =    146.470 ...   147.369 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 89639 ... 90179  =    149.245 ...   150.144 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 91324 ... 91864  =    152.051 ...   152.950 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 92899 ... 93439  =    154.673 ...   155.572 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 94559 ... 95099  =    157.437 ...   158.336 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 96238 ... 96778  =    160.232 ...   161.132 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 97951 ... 98491  =    163.085 ...   163.984 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 99729 ... 100269  =    166.045 ...   166.944 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 101351 ... 101891  =    168.745 ...   169.644 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 102945 ... 103485  =    171.399 ...   172.298 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 104515 ... 105055  =    174.013 ...   174.912 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 106101 ... 106641  =    176.654 ...   177.553 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 109553 ... 110093  =    182.401 ...   183.300 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 111153 ... 111693  =    185.065 ...   185.964 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 112856 ... 113396  =    187.901 ...   188.800 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 114632 ... 115172  =    190.858 ...   191.757 secs...
    [done]
    Applying baseline correction ... (mode: mean)
        Rejecting  epoch based on EOG : [u'EOG 061']
    Reading 118091 ... 118631  =    196.617 ...   197.516 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 119686 ... 120226  =    199.272 ...   200.171 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 121478 ... 122018  =    202.256 ...   203.155 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 123182 ... 123722  =    205.093 ...   205.992 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 124892 ... 125432  =    207.940 ...   208.839 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 126446 ... 126986  =    210.528 ...   211.427 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    Reading 128100 ... 128640  =    213.281 ...   214.180 secs...
    [done]
    Applying baseline correction ... (mode: mean)
    18 bad epochs dropped
    Computing time-frequency power on single epochs...
    Applying baseline correction ... (mode: ratio)


Compute statistic


.. code-block:: python

    threshold = 2.5
    T_obs, clusters, cluster_p_values, H0 = \
        permutation_cluster_1samp_test(epochs_power, n_permutations=100,
                                       threshold=threshold, tail=0)




.. rst-class:: sphx-glr-horizontal



**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    stat_fun(H1): min=-3.519184 max=7.581468
    Running intial clustering
    Found 9 clusters
    Permuting ...
    [                                        ] 1.00000 |        [............                            ] 32.00000 /        [.........................               ] 64.00000 -        [......................................  ] 96.00000 \    Computing cluster p-values
    Done.


View time-frequency plots


.. code-block:: python

    plt.clf()
    plt.subplots_adjust(0.12, 0.08, 0.96, 0.94, 0.2, 0.43)
    plt.subplot(2, 1, 1)
    plt.plot(times, evoked_data.T)
    plt.title('Evoked response (%s)' % ch_name)
    plt.xlabel('time (ms)')
    plt.ylabel('Magnetic Field (fT/cm)')
    plt.xlim(times[0], times[-1])
    plt.ylim(-100, 250)

    plt.subplot(2, 1, 2)

    # Create new stats image with only significant clusters
    T_obs_plot = np.nan * np.ones_like(T_obs)
    for c, p_val in zip(clusters, cluster_p_values):
        if p_val <= 0.05:
            T_obs_plot[c] = T_obs[c]

    vmax = np.max(np.abs(T_obs))
    vmin = -vmax
    plt.imshow(T_obs, cmap=plt.cm.gray,
               extent=[times[0], times[-1], frequencies[0], frequencies[-1]],
               aspect='auto', origin='lower', vmin=vmin, vmax=vmax)
    plt.imshow(T_obs_plot, cmap=plt.cm.RdBu_r,
               extent=[times[0], times[-1], frequencies[0], frequencies[-1]],
               aspect='auto', origin='lower', vmin=vmin, vmax=vmax)
    plt.colorbar()
    plt.xlabel('time (ms)')
    plt.ylabel('Frequency (Hz)')
    plt.title('Induced power (%s)' % ch_name)
    plt.show()



.. image:: /auto_tutorials/images/sphx_glr_plot_cluster_1samp_test_time_frequency_001.png
    :align: center




**Total running time of the script:**
(0 minutes 1.040 seconds)



**Download Python source code:** :download:`plot_cluster_1samp_test_time_frequency.py <plot_cluster_1samp_test_time_frequency.py>`
