

.. _sphx_glr_auto_tutorials_plot_ecog.py:


======================
Working with ECoG data
======================

MNE supports working with more than just MEG and EEG data. Here we show some
of the functions that can be used to facilitate working with
electrocorticography (ECoG) data.



.. code-block:: python

    # Author: Eric Larson <larson.eric.d@gmail.com>
    #
    # License: BSD (3-clause)

    from scipy.io import loadmat
    from mayavi import mlab

    import mne
    from mne.viz import plot_trans

    print(__doc__)







Let's load some ECoG electrode locations and names, and turn them into
a :class:`mne.DigMontage` class.



.. code-block:: python


    mat = loadmat(mne.datasets.misc.data_path() + '/ecog/sample_ecog.mat')
    ch_names = mat['ch_names'].tolist()
    elec = mat['elec']
    dig_ch_pos = dict(zip(ch_names, elec))
    mon = mne.channels.DigMontage(dig_ch_pos=dig_ch_pos)
    print('Created %s channel positions' % len(ch_names))





.. rst-class:: sphx-glr-script-out

 Out::

    Created 64 channel positions


Now that we have our electrode positions in MRI coordinates, we can create
our measurement info structure.



.. code-block:: python


    info = mne.create_info(ch_names, 1000., 'ecog', montage=mon)







We can then plot the locations of our electrodes on our subject's brain.

.. note:: These are not real electrodes for this subject, so they
          do not align to the cortical surface perfectly.



.. code-block:: python


    subjects_dir = mne.datasets.sample.data_path() + '/subjects'
    fig = plot_trans(info, trans=None, subject='sample', subjects_dir=subjects_dir)
    mlab.view(200, 70)



.. image:: /auto_tutorials/images/sphx_glr_plot_ecog_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    MEG electrodes not found. Cannot plot MEG locations.


**Total running time of the script:** ( 0 minutes  6.491 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ecog.py <plot_ecog.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ecog.ipynb <plot_ecog.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
